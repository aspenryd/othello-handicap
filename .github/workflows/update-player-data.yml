# This workflow fetches JSON data from an external API,
# wraps it in a JavaScript variable, and commits it as players.js to the repository.

name: Update Player Data

# Controls when the workflow will run
on:
  # Schedule the workflow to run once every day at 00:00 UTC
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Defines a single job named 'fetch-and-commit'
jobs:
  fetch-and-commit:
    # Specifies the runner environment for this job
    runs-on: ubuntu-latest

    # Defines the steps that will be executed in this job
    steps:
      # Step 1: Checks out your repository code
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # This token is required to allow the action to push changes back to the repository
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Fetch JSON data from the API
      - name: Fetch Player Data
        id: fetch_data # Assign an ID to this step to reference its outputs
        run: |
          # Use curl to fetch the JSON data from the specified URL
          # -s: Silent mode (don't show progress or error messages)
          PLAYER_JSON=$(curl -s http://ratings.katouche.fr/extract.php)
          echo "Fetched JSON data:"
          echo "$PLAYER_JSON" | head -n 5 # Print first 5 lines for brevity in logs

          # Check if the fetched data is empty or an error message
          if [ -z "$PLAYER_JSON" ] || echo "$PLAYER_JSON" | grep -q "error"; then
            echo "::error::Failed to fetch player data or received an error from the API."
            exit 1
          fi

          # Pass the JSON data as an output of this step
          echo "data=$PLAYER_JSON" >> "$GITHUB_OUTPUT"

      # Step 3: Create and Commit players.js using 1arp/create-a-file-action
      - name: Create and Commit players.js
        uses: 1arp/create-a-file-action@0.4.5
        with:
          # The path where the file will be created relative to the repository root
          path: ./webfiles/players.js
          # The content of the file, using the JSON data fetched in the previous step
          content: |
            const players = ${{ steps.fetch_data.outputs.data }};
          # The commit message for the new or updated file
          commit-message: "Update players.js with latest data from API"
          # The name of the committer
          committer: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          # The name of the author (can be the same as committer)
          author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          # The branch to commit to
          branch: main
          # The GitHub token for authentication
          token: ${{ secrets.GITHUB_TOKEN }}
          # Set to true to only commit if there are changes
          update-only: true
