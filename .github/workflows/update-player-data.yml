# This workflow fetches JSON data from an external API,
# wraps it in a JavaScript variable, and commits it as players.js to the repository.

name: Update Player Data

# Controls when the workflow will run
on:
  # Schedule the workflow to run once every day at 00:00 UTC
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Defines a single job named 'fetch-and-commit'
jobs:
  fetch-and-commit:
    # Specifies the runner environment for this job
    runs-on: ubuntu-latest

    # Defines the steps that will be executed in this job
    steps:
      # Step 1: Checks out your repository code
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # This token is required to allow the action to push changes back to the repository
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Fetch JSON data from the API and create players.js locally in webfiles/
      - name: Fetch Player Data and Create File
        shell: bash
        run: |
          # Create the webfiles directory if it doesn't exist
          mkdir -p webfiles

          # Use curl to fetch the JSON data from the specified URL
          # -s: Silent mode (don't show progress or error messages)
          PLAYER_JSON=$(curl -s http://ratings.katouche.fr/extract.php)
          echo "Fetched JSON data:"
          echo "$PLAYER_JSON" | head -n 5 # Print first 5 lines for brevity in logs

          # Check if the fetched data is empty or an error message
          if [ -z "$PLAYER_JSON" ] || echo "$PLAYER_JSON" | grep -q "error"; then
            echo "::error::Failed to fetch player data or received an error from the API."
            exit 1
          fi

          # Create the players.js file directly on the runner's filesystem inside webfiles/
          # This avoids passing potentially large content as an action input argument.
          cat <<'EOF' > webfiles/players.js
const players = ${PLAYER_JSON};
EOF
          echo "webfiles/players.js created locally."
          cat webfiles/players.js | head -n 5 # Print first 5 lines of the created file for verification

      # Step 3: Commit players.js using stefanzweifel/git-auto-commit-action
      - name: Commit players.js if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # Specify the files to commit. This action will only commit if 'webfiles/players.js' has changed.
          file_pattern: webfiles/players.js
          # The commit message for the new or updated file
          commit_message: "Update players.js with latest data from API"
          # The branch to commit to (defaults to the current branch, which is 'main' here)
          branch: main
          # The GitHub token for authentication (automatically provided by GitHub Actions)
          token: ${{ secrets.GITHUB_TOKEN }}
          # The default committer and author are usually 'github-actions[bot]', which is appropriate.
          # You can explicitly set them if needed:
          # commit_user_name: "github-actions[bot]"
          # commit_user_email: "github-actions[bot]@users.noreply.github.com"
